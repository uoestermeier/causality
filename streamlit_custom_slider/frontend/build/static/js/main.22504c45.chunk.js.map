{"version":3,"sources":["CustomSlider.tsx","index.tsx"],"names":["withStreamlitConnection","props","args","label","minValue","maxValue","initialValue","useState","value","setValue","useEffect","Streamlit","setFrameHeight","onChange","result","setComponentValue","onFinalChange","min","max","engine","Styletron","ReactDOM","render","StrictMode","theme","LightTheme","document","getElementById"],"mappings":"yOA8CeA,eA1BM,SAACC,GAGpB,MAAgEA,EAAMC,KAA9DC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,aACnC,EAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAIA,OAFAC,qBAAU,kBAAMC,IAAUC,oBAGxB,oCACE,4BAAKT,GACL,kBAAC,IAAD,CACEK,MAAOA,EACPK,SAAU,YAAgB,IAAbL,EAAY,EAAZA,MACPM,EAASN,GAASC,EAASD,GAE/B,OADAG,IAAUI,kBAAkBP,GACrBM,GAETE,cAAe,gBAAGR,EAAH,EAAGA,MAAH,OAAeG,IAAUI,kBAAkBP,IAC1DS,IAAKb,EACLc,IAAKb,Q,8BC/BPc,EAAS,IAAIC,IAGnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAmBf,MAAOW,GACxB,kBAAC,IAAD,CAAeK,MAAOC,KACpB,kBAAC,EAAD,SAINC,SAASC,eAAe,W","file":"static/js/main.22504c45.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { ComponentProps, Streamlit, withStreamlitConnection } from \"streamlit-component-lib\"\nimport { Slider } from \"baseui/slider\"\n\n/**\n * We can use a Typescript interface to destructure the arguments from Python\n * and validate the types of the input\n */\ninterface PythonArgs {\n  label: string\n  minValue?: number\n  maxValue?: number\n  initialValue: number[]\n}\n\n/**\n * No more props manipulation in the code.\n * We store props in state and pass value directly to underlying Slider\n * and then back to Streamlit.\n */\nconst CustomSlider = (props: ComponentProps) => {\n  // Destructure using Typescript interface\n  // This ensures typing validation for received props from Python\n  const { label, minValue, maxValue, initialValue }: PythonArgs = props.args\n  const [value, setValue] = useState(initialValue)\n\n  useEffect(() => Streamlit.setFrameHeight())\n\n  return (\n    <>\n      <h3>{label}</h3>\n      <Slider\n        value={value}\n        onChange={({ value }) => {\n          let result = value && setValue(value)\n          Streamlit.setComponentValue(value) \n          return result\n        }}\n        onFinalChange={({ value }) => Streamlit.setComponentValue(value)}\n        min={minValue}\n        max={maxValue}\n      />\n    </>\n  )\n}\n\nexport default withStreamlitConnection(CustomSlider)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CustomSlider from \"./CustomSlider\"\n\n// Lots of import to define a Styletron engine and load the light theme of baseui\nimport { Client as Styletron } from \"styletron-engine-atomic\"\nimport { Provider as StyletronProvider } from \"styletron-react\"\nimport { ThemeProvider, LightTheme } from \"baseui\"\n\nconst engine = new Styletron()\n\n// Wrap your CustomSlider with the baseui them\nReactDOM.render(\n  <React.StrictMode>\n    <StyletronProvider value={engine}>\n      <ThemeProvider theme={LightTheme}>\n        <CustomSlider />\n      </ThemeProvider>\n    </StyletronProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}